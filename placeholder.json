{
  "course": {
    "name": "Mastering ReactJS: A Comprehensive Guide",
    "description": "Dive deep into the world of ReactJS and learn to build dynamic, high-performance web applications. This course covers everything from the fundamentals of components and state to advanced concepts like hooks, routing, and state management, equipping you with the skills to become a proficient React developer.",
    "category": "Web Development",
    "level": "Beginner to Intermediate",
    "includeVideo": true,
    "noOfChapters": 3,
    "bannerImagePrompt": "Create a modern, flat-style 2D digital illustration representing ReactJS. Include UI/UX elements such as mockup screens displaying React components, text blocks for code snippets, React icons, buttons, and creative workspace tools like a VS Code interface. Add symbolic elements related to ReactJS, like sticky notes with component names, design components (e.g., buttons, input fields), and visual aids (e.g., arrows indicating data flow). Use a vibrant color palette (blues, purples, oranges) with a clean, professional look. The illustration should feel creative, tech-savvy, and educational, ideal for visualizing concepts in ReactJS.",
    "chapters": [
      {
        "chapterName": "Chapter 1: React Fundamentals",
        "duration": "1 hour 30 minutes",
        "topics": [
          "Introduction to ReactJS",
          "Setting up a React Development Environment",
          "Understanding JSX",
          "Components: Functional vs. Class Components",
          "Props and State",
          "Event Handling"
        ]
      },
      {
        "chapterName": "Chapter 2: Advanced React Concepts",
        "duration": "2 hours",
        "topics": [
          "React Hooks: useState, useEffect, useContext",
          "Conditional Rendering",
          "List Rendering",
          "Forms and Controlled Components",
          "React Router for Navigation",
          "Introduction to State Management (Context API)"
        ]
      },
      {
        "chapterName": "Chapter 3: Building a React Application",
        "duration": "2 hours 30 minutes",
        "topics": [
          "Project Setup and Folder Structure",
          "Building Reusable Components",
          "Fetching Data with Axios/Fetch API",
          "Integrating a UI Library (e.g., Material-UI, Ant Design)",
          "Deployment Strategies",
          "Debugging and Performance Optimization"
        ]
      }
    ]
  }
}